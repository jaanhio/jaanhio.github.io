<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>monitoring on jaanhio</title>
    
    
    
    <link>/tags/monitoring/</link>
    <description>Recent content in monitoring on jaanhio</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 26 Sep 2021 13:44:24 +0800</lastBuildDate>
    
	<atom:link href="/tags/monitoring/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Visualizing alerts metrics on Grafana</title>
      <link>/blog/visualizing-alerts-metrics-grafana/</link>
      <pubDate>Sun, 26 Sep 2021 13:44:24 +0800</pubDate>
      
      <guid>/blog/visualizing-alerts-metrics-grafana/</guid>
      <description>
        
          
          
          
        
        
        
          When it comes to Prometheus and alerts, the typical use case is to send alerts to Alertmanager for handling (deduplication, grouping) and routing them to the various services such Slack, PagerDuty etc.
However, there might be situations where we might need to perform analysis on alert patterns and being able to visualize how often the alerts are firing can be very useful.
In this post, I will share how we can visualize the alert metrics on Grafana using the various PromQL operators and functions.
          
        
        </description>
    </item>
    
    <item>
      <title>Debugging a misfiring Prometheus alert</title>
      <link>/blog/debugging-prometheus-alert/</link>
      <pubDate>Mon, 20 Sep 2021 11:46:24 +0800</pubDate>
      
      <guid>/blog/debugging-prometheus-alert/</guid>
      <description>
        
          
          
          
        
        
        
          Last week at work, I encountered an alert that was misfiring. Or so I thought...
          
        
        </description>
    </item>
    
    <item>
      <title>Understanding the differences between alertmanager&#39;s group_wait, group_interval and repeat_interval</title>
      <link>/blog/understanding-alertmanager/</link>
      <pubDate>Fri, 27 Aug 2021 12:07:56 +0800</pubDate>
      
      <guid>/blog/understanding-alertmanager/</guid>
      <description>
        
          
          
          
        
        
        
          Alertmanager is an application that handles alerts sent by client applications such as Prometheus. It can also perform alert grouping, deduplication, silencing, inhibition. Definitely a useful addition to any modern monitoring infrastructure.
That being said, configuring it can be a little daunting with the many different configurations available and somewhat vague explanations on some of the terms.
While configuring Alertmanager, I came across these 3 confusing terms: group_wait, group_interval and repeat_interval.
          
        
        </description>
    </item>
    
    <item>
      <title>Node-exporter setup with Systemd</title>
      <link>/blog/linux-node-exporter-setup/</link>
      <pubDate>Thu, 19 Aug 2021 22:22:18 +0800</pubDate>
      
      <guid>/blog/linux-node-exporter-setup/</guid>
      <description>
        
          
          
          
        
        
        
          For those who aren&amp;rsquo;t familiar, node-exporter is a Prometheus exporter that exposes hardware and OS metrics from *NIX kernels.
To get it up and running, there&amp;rsquo;s a simple guide on Prometheus official docs. The issue with the approach is that running node-exporter by executing binary directly isn&amp;rsquo;t the most reliable approach in a production environment as there&amp;rsquo;s no way to ensure that the node_exporter process will run continuously.
This is where systemd comes in.
          
        
        </description>
    </item>
    
  </channel>
</rss>